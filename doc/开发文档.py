# ## 项目介绍：
# 本项目实现基于视频的笔记系统,基于django+vue+elementplus搭建,由于后两者使用单文件引入,所以不需要安装任何前端依赖，
# 
# 以编程或者实验室为例，完善的文档固然重要，文字可以速读，但文档承载的信息量比较少，即使用心去写，几个月后也可能忘记其中某一步骤的前因后果。
# 并且阅读文档依然是主动接收知识，如果这一过程可以
# 以视频的形式，自己记录的想法都可以被完整地了解到。
# 完善字幕，并在关键位置做上笔记，也会极大加快阅读视频的速度。
# 
# 本项目可以依据字幕对视频进行简单切分，如果想对B站或者抖音视频做笔记，但内嵌广告，可以通过这一功能快速保留去除广告的视频。
# 如果你是一个录视频容易口胡的人，可以通过本项目快速生成字幕，并删除口胡的部分。
# 如果想下载外文视频，识别字幕并翻译，这里支持B站接口和扫码登录。
# 本项目基于web端，支持局域网内多设备访问，可以作为家庭影院使用，也可以借助zerotier或sunshine构建虚拟局域网，远程编辑。
# 使用whisper识别字幕时，large model效果比medium好一些。
# 
# ## 项目参考：
# 1. 本项目的灵感来源于李沐老师22年的开源项目autocut,即通过字幕剪辑视频。这个项目完成度很高,但ui问题没有解决，可以看这个issues。
# 2. 项目初期字幕生成和翻译效果不好，参考了这个项目加以改善
# 3. 作者不太擅长ui界面，将功能表达给用户，因此参考了memo的用户界面，如有侵权会后期改善。
# 
# autocut的剪辑还存在一个问题,即用户剪切完毕视频，字幕不会相应改变。
# H.265编码的MP4文件由于专利原因，浏览器无法直接播放，如果用户上传H.265格式的视频，会将视频转为H.264格式保存。



# ## 目录结构：
# ./
# ├── 过程.ipynb  （用于记录过程）
# ├── app.py （主程序）
# ├── flask_port.txt （记录动态端口）
# ├── README.md 
# ├── static/ （静态文件）
# │   ├── css/ （列表样式和视频.css）
# │   │   ├── styles.css （视频列表的样式）
# │   │   └── video.css （视频的样式）
# │   └── js/  ()
# │       ├── app.js (视频的js，包含vue模板)
# │       ├── index.js ()
# │       ├── note.js (笔记部分的js)
# │       ├── shoucang.js (视频列表的js)
# │       └── vue.js (被引用的本地vue.js)
# ├── templates/
# │   ├── test/ (测试 html文件)
# │   │   ├── test1.html
# │   │   └── test.html
# │   ├── video.html （具体视频的html）
# │   └── video_list.html (视频连接的html)
# └── video_info.json (以json格式展示哪些视频与对应图片)

# 本项目中采用django和restful api以减少依赖报错的可能性。

# django的版本是5.2.1.

