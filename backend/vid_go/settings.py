"""
Django settings for vid_go project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from urllib.parse import urlparse

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t*f^ky%62$)j_af*qs7)m&pwb-)1lgc&u22a^yj!e=6_@s@%dn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Helper function to get environment variable as list
def __get_list(env_var, default=None):
    """Get environment variable as a comma-separated list"""
    value = os.getenv(env_var)
    if value:
        return [item.strip() for item in value.split(',') if item.strip()]
    return default or []

# 允许承载server的 Host
ALLOWED_HOSTS = __get_list('VIDGO_ALLOWED_HOSTS', ['*'])

# Dynamic CORS and CSRF configuration
CORS_ALLOWED_ORIGINS = __get_list(
    'VIDGO_CORS_ALLOWED_ORIGINS',
    ["http://localhost:4173", "http://127.0.0.1:4173"]  # Default for development
)

CSRF_TRUSTED_ORIGINS = __get_list(
    'VIDGO_CSRF_TRUSTED_ORIGINS',
    ["http://localhost:4173", "http://127.0.0.1:4173"]  # Default for development
)

# Function to parse VIDGO_URL and automatically configure CORS, CSRF, and ALLOWED_HOSTS
def _parse_vidgo_url():
    """Parse VIDGO_URL environment variable and configure related settings"""
    global CSRF_TRUSTED_ORIGINS, CORS_ALLOWED_ORIGINS, ALLOWED_HOSTS

    url = os.getenv("VIDGO_URL")
    if url:
        # Add to CSRF trusted origins
        if url not in CSRF_TRUSTED_ORIGINS:
            CSRF_TRUSTED_ORIGINS.append(url)

        # Add to CORS allowed origins
        if url not in CORS_ALLOWED_ORIGINS:
            CORS_ALLOWED_ORIGINS.append(url)

        # Add hostname to ALLOWED_HOSTS
        parsed_url = urlparse(url)
        hostname = parsed_url.hostname
        if hostname and hostname not in ALLOWED_HOSTS and '*' not in ALLOWED_HOSTS:
            ALLOWED_HOSTS.append(hostname)

# Parse VIDGO_URL if provided
_parse_vidgo_url()

# Add development origins in DEBUG mode
if DEBUG:
    dev_origins = [
        "http://localhost:4173",
        "http://127.0.0.1:4173",
        "http://localhost:8080",
        "http://127.0.0.1:8080"
    ]
    for origin in dev_origins:
        if origin not in CORS_ALLOWED_ORIGINS:
            CORS_ALLOWED_ORIGINS.append(origin)
        if origin not in CSRF_TRUSTED_ORIGINS:
            CSRF_TRUSTED_ORIGINS.append(origin)

# CORS 设置
CORS_ALLOW_CREDENTIALS = True

# Expose headers for file downloads
CORS_EXPOSE_HEADERS = [
    "Content-Disposition",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'video',
    'accounts',
    'corsheaders', 
]


# Note: CORS_ALLOW_CREDENTIALS is already set above

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # ← 一定要放在 CommonMiddleware 前面
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vid_go.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vid_go.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "database" / "videos.db",  # 指向你的 Flask 数据库文件
    },
    # 'legacy': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'videos_legacy.db',  # 指向你的 Flask 数据库文件
    # }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Media settings

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 指向项目根目录下的 media 文件夹
MEDIA_URL = '/media/'  # 访问媒体的 URL 前缀

# Large file upload settings for 18GB+ files
DATA_UPLOAD_MAX_MEMORY_SIZE = None  # No limit on memory-based uploads
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 100MB - files larger than this will be saved to temp files
DATA_UPLOAD_MAX_NUMBER_FIELDS = None  # No limit on form fields
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# 静态文件配置（确保已设置 STATIC_URL 和 STATICFILES_DIRS）
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  # 静态文件存放目录
STATIC_ROOT = BASE_DIR / 'staticfiles'  # collectstatic 收集到的目录

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom user model
AUTH_USER_MODEL = 'accounts.User'
